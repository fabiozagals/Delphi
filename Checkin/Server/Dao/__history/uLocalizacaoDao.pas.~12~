unit uLocalizacaoDao;

interface

uses
  FireDAC.Comp.Client, System.Generics.Collections, System.SysUtils,
  uLocalizacaoModel, uConexao;

type
  TLocalizacaoDao = class
  private
    Conn: TConexao;
    Qry: TFDQuery;
  public
    function Obter: TObjectList<TLocalizacaoModel>;
    procedure Incluir(locModel: TLocalizacaoModel);
    procedure Alterar(locModel: TLocalizacaoModel);
    procedure Excluir(ID: Integer);
    function CriarQuery : TFDQuery;


    constructor create;
    destructor destroy; override;

  end;

implementation

{ TLocalizacaoDao }

constructor TLocalizacaoDao.create;
begin
  Conn := TConexao.create;
  Qry := TFDQuery.create(nil);
  Qry.Connection := Conn.GetConn;
end;

function TLocalizacaoDao.CriarQuery: TFDQuery;
var
  Conn : TConexao;
  Qry : TFDQuery;
begin
  Conn := TConexao.create;
  Qry := TFDQuery.create(nil);
  Qry.Connection := Conn.GetConn;
  Result := Qry;
end;

destructor TLocalizacaoDao.destroy;
begin
  FreeAndNil(Qry);
  FreeAndNil(Conn);
  inherited;
end;

function TLocalizacaoDao.Obter: TObjectList<TLocalizacaoModel>;
var
  Qry : TFDQuery;
  Lista : TObjectList<TLocalizacaoModel>;
  Loc : TLocalizacaoModel;
begin
  Qry := CriarQuery;
  try
    Qry.SQL.Add('Select ID, Usuario, Data_Hora, Endereco, Bairro, Cidade, Estado, Pais From Localizacao');
    Qry.Open;
    Qry.First;
    Lista := TObjectList<TLocalizacaoModel>.Create;
    while not Qry.Eof do
    begin
     Loc := TLocalizacaoModel.Create;
     Loc.ID       := Qry.FieldByName('ID').AsInteger;
     Loc.Nome     := Qry.FieldByName('Usuario').AsString;
     Loc.DataHora := Qry.FieldByName('Data_Hora').AsDateTime;
     Loc.Endereco := Qry.FieldByName('Endereco').AsString;
     Loc.Bairro   := Qry.FieldByName('Bairro').AsString;
     Loc.Cidade   := Qry.FieldByName('Cidade').AsString;
     Loc.Estado   := Qry.FieldByName('Estado').AsString;
     Loc.Pais     := Qry.FieldByName('Pais').AsString;

     Lista.Add(Loc);
     Qry.Next
    end;

    Result := Lista;
  finally
    FreeAndNil(Loc);
    FreeAndNil(Lista);
    FreeAndNil(Qry);
  end;
end;

procedure TLocalizacaoDao.Incluir(locModel: TLocalizacaoModel);
var
  Qry : TFDQuery;
begin
  Qry := CriarQuery;
  try
    Qry.SQL.Add('Insert Into Localizacao (Usuario, Data_Hora, Endereco, Bairro, Cidade, Estado, Pais) Values (:Usuario, :Data_Hora, :Endereco, :Bairro, :Cidade, :Estado, :Pais)');
    Qry.Params.ParamByName('Usuario').AsString     := locModel.Nome;
    Qry.Params.ParamByName('Data_Hora').AsDateTime := locModel.DataHora;
    Qry.Params.ParamByName('Endereco').AsString    := locModel.Endereco;
    Qry.Params.ParamByName('Bairro').AsString      := locModel.Bairro;
    Qry.Params.ParamByName('Cidade').AsString      := locModel.Cidade;
    Qry.Params.ParamByName('Estado').AsString      := locModel.Estado;
    Qry.Params.ParamByName('Pais').AsString        := locModel.Pais;
    Qry.ExecSQL;
  finally
    FreeAndNil(Qry);
  end;
end;

procedure TLocalizacaoDao.Alterar(locModel: TLocalizacaoModel);
var
  Qry : TFDQuery;
begin
  Qry := CriarQuery;
  try
    Qry.SQL.Add('Update Localizacao Set Usuario = :Usuario, Data_Hora = :Data_Hora, Endereco = :Endereco, Bairro = :Bairro, Cidade = :Cidade, Estado = :Estado, Pais = :Pais where ID = :ID;
    Qry.Params.ParamByName('Usuario').AsString     := locModel.Nome;
    Qry.Params.ParamByName('Data_Hora').AsDateTime := locModel.DataHora;
    Qry.Params.ParamByName('Endereco').AsString    := locModel.Endereco;
    Qry.Params.ParamByName('Bairro').AsString      := locModel.Bairro;
    Qry.Params.ParamByName('Cidade').AsString      := locModel.Cidade;
    Qry.Params.ParamByName('Estado').AsString      := locModel.Estado;
    Qry.Params.ParamByName('Pais').AsString        := locModel.Pais;
    Qry.ExecSQL;
  finally
    FreeAndNil(Qry);
  end;
end;

procedure TLocalizacaoDao.Excluir(ID: Integer);
begin

end;

end.
